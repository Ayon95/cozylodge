
SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";

CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";

CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";

SET default_tablespace = '';

SET default_table_access_method = "heap";

CREATE TABLE IF NOT EXISTS "public"."booking" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "start_date" timestamp without time zone NOT NULL,
    "end_date" timestamp without time zone NOT NULL,
    "num_nights" smallint NOT NULL,
    "num_guests" smallint NOT NULL,
    "cabin_price" real NOT NULL,
    "extras_price" real NOT NULL,
    "total_price" real NOT NULL,
    "status" "text" NOT NULL,
    "has_breakfast" boolean NOT NULL,
    "is_paid" boolean NOT NULL,
    "observations" "text",
    "cabin_id" bigint NOT NULL,
    "guest_id" bigint NOT NULL
);

ALTER TABLE "public"."booking" OWNER TO "postgres";

ALTER TABLE "public"."booking" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."booking_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."cabin" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" "text" NOT NULL,
    "max_capacity" smallint NOT NULL,
    "regular_price" real NOT NULL,
    "discount" smallint,
    "description" "text" NOT NULL,
    "image_url" "text" NOT NULL
);

ALTER TABLE "public"."cabin" OWNER TO "postgres";

ALTER TABLE "public"."cabin" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."cabin_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."guest" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "full_name" "text" NOT NULL,
    "email" "text" NOT NULL,
    "national_id" "text",
    "nationality" "text",
    "country_flag" "text"
);

ALTER TABLE "public"."guest" OWNER TO "postgres";

ALTER TABLE "public"."guest" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."guest_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."settings" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "min_booking_length" smallint NOT NULL,
    "max_booking_length" smallint NOT NULL,
    "max_guests_per_booking" smallint NOT NULL,
    "breakfast_price" real NOT NULL
);

ALTER TABLE "public"."settings" OWNER TO "postgres";

ALTER TABLE "public"."settings" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."settings_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY "public"."booking"
    ADD CONSTRAINT "booking_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."cabin"
    ADD CONSTRAINT "cabin_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."guest"
    ADD CONSTRAINT "guest_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."settings"
    ADD CONSTRAINT "settings_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."booking"
    ADD CONSTRAINT "booking_cabin_id_fkey" FOREIGN KEY ("cabin_id") REFERENCES "public"."cabin"("id");

ALTER TABLE ONLY "public"."booking"
    ADD CONSTRAINT "booking_guest_id_fkey" FOREIGN KEY ("guest_id") REFERENCES "public"."guest"("id");

CREATE POLICY "Enable read access for all users" ON "public"."booking" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."cabin" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."guest" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."settings" FOR SELECT USING (true);

ALTER TABLE "public"."booking" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."cabin" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."guest" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."settings" ENABLE ROW LEVEL SECURITY;

GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";

GRANT ALL ON TABLE "public"."booking" TO "anon";
GRANT ALL ON TABLE "public"."booking" TO "authenticated";
GRANT ALL ON TABLE "public"."booking" TO "service_role";

GRANT ALL ON SEQUENCE "public"."booking_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."booking_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."booking_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."cabin" TO "anon";
GRANT ALL ON TABLE "public"."cabin" TO "authenticated";
GRANT ALL ON TABLE "public"."cabin" TO "service_role";

GRANT ALL ON SEQUENCE "public"."cabin_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."cabin_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."cabin_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."guest" TO "anon";
GRANT ALL ON TABLE "public"."guest" TO "authenticated";
GRANT ALL ON TABLE "public"."guest" TO "service_role";

GRANT ALL ON SEQUENCE "public"."guest_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."guest_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."guest_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."settings" TO "anon";
GRANT ALL ON TABLE "public"."settings" TO "authenticated";
GRANT ALL ON TABLE "public"."settings" TO "service_role";

GRANT ALL ON SEQUENCE "public"."settings_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."settings_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."settings_id_seq" TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";

RESET ALL;
